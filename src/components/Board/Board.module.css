.boardContainer {
    margin: 2rem auto;
    width: fit-content;
    position: relative;
    display: grid;
    grid-template-columns: auto 1fr;
    grid-template-rows: auto 1fr;
    grid-template-areas:
        ". column-labels"
        "row-labels board";
    gap: 4px;
}

.boardGrid {
    grid-area: board;
    display: grid;
    grid-template-columns: repeat(3, 100px); /* Size of cells */
    grid-template-rows: repeat(3, 100px);
    gap: 5px;
    border: 2px solid #333;
    background-color: #f0f0f0;
    padding: 5px;
}

.cell {
    background-color: #fff;
    border: 1px solid #ccc;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    position: relative; /* For piece stacking */
    font-size: 2rem; /* Placeholder for pieces */
    transition: background-color 0.2s ease;
}

.cell:hover {
    background-color: #e9e9e9;
}

.label {
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    color: #555;
}

.colLabels {
    grid-area: column-labels;
    display: grid;
    grid-template-columns: repeat(3, 100px);
    gap: 5px;
    padding-left: 5px; /* Align with board padding */
    padding-right: 5px; /* Align with board padding */
}

.rowLabels {
    grid-area: row-labels;
    display: grid;
    grid-template-rows: repeat(3, 100px);
    gap: 5px;
    padding-top: 5px; /* Align with board padding */
    padding-bottom: 5px; /* Align with board padding */
}

.pieceWrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.errorMessage {
    position: absolute;
    bottom: -40px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(255, 0, 0, 0.8);
    color: white;
    padding: 8px 16px;
    border-radius: 4px;
    font-size: 14px;
    max-width: 80%;
    text-align: center;
    z-index: 100;
    animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translate(-50%, 10px); }
    to { opacity: 1; transform: translate(-50%, 0); }
} 